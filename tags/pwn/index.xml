<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pwn on conflict</title>
    <link>/tags/pwn/</link>
    <description>Recent content in Pwn on conflict</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 23 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/pwn/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ðŸ‡¬ðŸ‡§ CyberApocalypse 2025 - pwn/quack_quack</title>
      <link>/posts/2025/03/cyberapocalypse-2025-pwn/quack_quack/</link>
      <pubDate>Sun, 23 Mar 2025 00:00:00 +0000</pubDate>
      <guid>/posts/2025/03/cyberapocalypse-2025-pwn/quack_quack/</guid>
      <description>&lt;h3 id=&#34;table-of-contents&#34;&gt;Table of contents&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;/posts/2025/03/cyberapocalypse-2025-pwn/quack_quack/#file-information&#34;&gt;File Information&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;/posts/2025/03/cyberapocalypse-2025-pwn/quack_quack/#reversing-the-binary&#34;&gt;Reversing the binary&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;/posts/2025/03/cyberapocalypse-2025-pwn/quack_quack/#identifying-vulnerabilities&#34;&gt;Identifying vulnerabilities&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;/posts/2025/03/cyberapocalypse-2025-pwn/quack_quack/#exploit-plan-tldr&#34;&gt;Exploit Plan (TLDR)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;/posts/2025/03/cyberapocalypse-2025-pwn/quack_quack/#solve-script&#34;&gt;Solve Script&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;/posts/2025/03/cyberapocalypse-2025-pwn/quack_quack/#conclusion&#34;&gt;Conclusion&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;note&#34;&gt;Note&lt;/h2&gt;&#xA;&lt;p&gt;Writeup for the first &lt;code&gt;pwn&lt;/code&gt; challenge from CyberApocalypse 2025.&lt;/p&gt;&#xA;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;On the quest to reclaim the Dragon&amp;#39;s Heart, the wicked Lord Malakar has cursed the villagers, turning them into ducks! &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Join Sir Alaric in finding a way to defeat them without causing harm. Quack Quack, it&amp;#39;s time to face the Duck!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;file-information&#34;&gt;File information&lt;/h2&gt;&#xA;&lt;p&gt;We&amp;rsquo;re given the binary and the libc it uses&lt;/p&gt;</description>
    </item>
    <item>
      <title>ðŸ‡¬ðŸ‡§ HeroCTF 2024 - pwn/bankrupst</title>
      <link>/posts/2024/10/heroctf-2024-pwn/bankrupst/</link>
      <pubDate>Sun, 27 Oct 2024 00:00:00 +0000</pubDate>
      <guid>/posts/2024/10/heroctf-2024-pwn/bankrupst/</guid>
      <description>&lt;h3 id=&#34;table-of-contents&#34;&gt;Table of contents&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;/posts/2024/10/heroctf-2024-pwn/bankrupst/#file-information&#34;&gt;File Information&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;/posts/2024/10/heroctf-2024-pwn/bankrupst/#looking-for-a-vulnerability&#34;&gt;Looking for a vulnerability&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;/posts/2024/10/heroctf-2024-pwn/bankrupst/#exploit-plan-tldr&#34;&gt;Exploit Plan (TLDR)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;/posts/2024/10/heroctf-2024-pwn/bankrupst/#solve-script&#34;&gt;Solve Script&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;/posts/2024/10/heroctf-2024-pwn/bankrupst/#conclusion&#34;&gt;Conclusion&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;note&#34;&gt;Note&lt;/h2&gt;&#xA;&lt;p&gt;Writeup for the first &lt;code&gt;pwn&lt;/code&gt; challenge from HeroCTF 2024.&lt;/p&gt;&#xA;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;BankRupst is a bank operating in bankruptcy where no laws are applicable.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;file-information&#34;&gt;File information&lt;/h2&gt;&#xA;&lt;p&gt;We&amp;rsquo;re given the binary and the source code which is written in Rust.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;checksec&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;bankrupst&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;file&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;bankrupst&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[*]&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home/conflict/ctfs/heroctf2024/pwn/pwn_bankrupst/bankrupst&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;Arch&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;amd64-64-little&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;RELRO&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;Full&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;RELRO&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;Stack&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;No&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;canary&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;found&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;NX&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;         &lt;span style=&#34;color:#f92672&#34;&gt;NX&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;PIE&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;PIE&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;Stripped&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;No&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;bankrupst&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;ELF&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;64-bit&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;LSB&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;pie&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;executable&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;x86-64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;SYSV&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;),&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;static-pie&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;linked&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;BuildID&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;sha1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]=&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;fcaba4040b2539cfd3c26241d864d3e46727ca82&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;stripped&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Reading the source code, we can see that every function has the &lt;em&gt;unsafe&lt;/em&gt; keyword. It is used to bypass Rustâ€™s safety checks and allows greater &amp;ldquo;control&amp;rdquo; over memory, but it can also make your program vulnerable if memory is not managed properly.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ðŸ‡¬ðŸ‡§ HeroCTF 2024 - pwn/heappie</title>
      <link>/posts/2024/10/heroctf-2024-pwn/heappie/</link>
      <pubDate>Sun, 27 Oct 2024 00:00:00 +0000</pubDate>
      <guid>/posts/2024/10/heroctf-2024-pwn/heappie/</guid>
      <description>&lt;h3 id=&#34;table-of-contents&#34;&gt;Table of contents&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;/posts/2024/10/heroctf-2024-pwn/heappie/#file-information&#34;&gt;File Information&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;/posts/2024/10/heroctf-2024-pwn/heappie/#looking-for-a-vulnerability&#34;&gt;Looking for a vulnerability&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;/posts/2024/10/heroctf-2024-pwn/heappie/#exploit-plan-tldr&#34;&gt;Exploit Plan (TLDR)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;/posts/2024/10/heroctf-2024-pwn/heappie/#solve-script&#34;&gt;Solve Script&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;/posts/2024/10/heroctf-2024-pwn/heappie/#conclusion&#34;&gt;Conclusion&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;note&#34;&gt;Note&lt;/h2&gt;&#xA;&lt;p&gt;Writeup for the second &lt;code&gt;pwn&lt;/code&gt; challenge from HeroCTF 2024.&lt;/p&gt;&#xA;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Heappie is a simple application that allows you to save and play your favorite songs. Find a way to exploit it and read the flag.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;file-information&#34;&gt;File information&lt;/h2&gt;&#xA;&lt;p&gt;We are given the binary and the source code, which is written in C.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;checksec&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;heappie&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;file&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;heappie&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[*]&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home/conflict/ctfs/heroctf2024/pwn/heappie/heappie&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;Arch&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;amd64-64-little&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;RELRO&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;Full&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;RELRO&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;Stack&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;Canary&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;found&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;NX&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;         &lt;span style=&#34;color:#f92672&#34;&gt;NX&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;PIE&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;PIE&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;SHSTK&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;Enabled&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;IBT&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;Enabled&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;Stripped&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;No&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;Debuginfo&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;Yes&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;heappie&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;ELF&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;64-bit&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;LSB&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;pie&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;executable&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;x86-64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;SYSV&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;),&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;dynamically&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;linked&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;interpreter&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;lib64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;ld-linux-x86-64&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;so&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;BuildID&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;sha1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]=&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;b1454a58ded17f3fd2fef3a2d6a30f5cd2f104cd&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;GNU&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;Linux&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;3&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;2&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;debug_info&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;stripped&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Reading the source code, we see that we have four options:&lt;/p&gt;</description>
    </item>
    <item>
      <title>ðŸ‡«ðŸ‡· PwnMe 2023 - pwn/vip_at_libc</title>
      <link>/posts/2023/05/pwnme-2023-pwn/vip_at_libc/</link>
      <pubDate>Mon, 08 May 2023 00:00:00 +0000</pubDate>
      <guid>/posts/2023/05/pwnme-2023-pwn/vip_at_libc/</guid>
      <description>&lt;h2 id=&#34;note&#34;&gt;Note&lt;/h2&gt;&#xA;&lt;p&gt;&lt;em&gt;VIP at LIBC&lt;/em&gt; Ã©tait un challenge de pwn issu du &lt;strong&gt;PwnMe CTF 2023&lt;/strong&gt;. Un challenge &lt;em&gt;d&amp;rsquo;intro&lt;/em&gt; (??) trÃ¨s sympa, avec un petit plus qui lui permet de se dÃ©marquer des classiques &lt;code&gt;ret2libc&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Sooo I heard that if you were VIP, you could access some specific features!  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Maybe one of those features can be used to get inside their system?  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Author: Zerotistic#0001&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://ctf.pwnme.fr/api/assets/vip_at_libc.tgz&#34;&gt;&lt;code&gt;vip_at_libc.tgz&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;analyse-du-fichier&#34;&gt;Analyse du fichier&lt;/h2&gt;&#xA;&lt;p&gt;On a le binaire et la &lt;code&gt;libc&lt;/code&gt; qui va avec, Ã§a nous indique dÃ©jÃ  qu&amp;rsquo;on va probablement devoir interagir avec.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ðŸ‡«ðŸ‡· FCSC 2023 - pwn/robot</title>
      <link>/posts/2023/04/fcsc-2023-pwn/robot/</link>
      <pubDate>Sun, 30 Apr 2023 00:00:00 +0000</pubDate>
      <guid>/posts/2023/04/fcsc-2023-pwn/robot/</guid>
      <description>&lt;h2 id=&#34;note&#34;&gt;Note&lt;/h2&gt;&#xA;&lt;p&gt;&lt;em&gt;robot&lt;/em&gt; Ã©tait un challenge de pwn issu du &lt;strong&gt;FCSC 2023&lt;/strong&gt;. Globalement un trÃ¨s bon challenge, et surtout une trÃ¨s bonne initiation Ã  l&amp;rsquo;exploitation &lt;em&gt;heap&lt;/em&gt; puisque je n&amp;rsquo;en avais jamais fait !&lt;/p&gt;&#xA;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;La startup _FunWithRobots &amp;amp; Co._ souhaite proposer un service interactif, qui tourne sur un serveur distant et qui simule un robot avec beaucoup de rÃ©alisme. &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mais la veille de l&amp;#39;inauguration, le chef de projet se souvient d&amp;#39;une vague mention concernant des exigences de sÃ©curitÃ©...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Comme vous Ãªtes la personne chargÃ©e de la sÃ©curitÃ©, il a besoin de votre validation.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Selon lui, cela n&amp;#39;est qu&amp;#39;une simple formalitÃ© car le code a Ã©tÃ© relu par leurs meilleurs dÃ©veloppeurs et le binaire s&amp;#39;exÃ©cute avec toutes les protections classiques (canaris, W^X, ASLR, etc.).&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;VÃ©rifiez s&amp;#39;il est possible de lire le fichier `flag.txt` qui se trouve sur le serveur distant.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://france-cybersecurity-challenge.fr/files/069ca7f147eb771e02814586cfa94514/robot&#34;&gt;&lt;code&gt;robot&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://france-cybersecurity-challenge.fr/files/323d5aa30fc1f647e4d60019a74b3dde/robot.c&#34;&gt;&lt;code&gt;robot.c&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ðŸ‡¬ðŸ‡§ What is: &#34;A Race Condition Attack&#34;</title>
      <link>/posts/2023/03/what-is-a-race-condition-attack/</link>
      <pubDate>Tue, 28 Mar 2023 00:00:00 +0000</pubDate>
      <guid>/posts/2023/03/what-is-a-race-condition-attack/</guid>
      <description>&lt;h3 id=&#34;table-of-contents&#34;&gt;Table of contents&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;/posts/2023/03/what-is-a-race-condition-attack/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;/posts/2023/03/what-is-a-race-condition-attack/#time-of-check-time-of-use&#34;&gt;Time of check, Time of use&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;/posts/2023/03/what-is-a-race-condition-attack/#example&#34;&gt;Example&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;/posts/2023/03/what-is-a-race-condition-attack/#how-to-avoid-these-attacks&#34;&gt;How to avoid these attacks&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;/posts/2023/03/what-is-a-race-condition-attack/#conclusion&#34;&gt;Conclusion&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;/posts/2023/03/what-is-a-race-condition-attack/#further-documentation&#34;&gt;Further documentation&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h1&gt;&#xA;&lt;p&gt;&lt;em&gt;none&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&lt;p&gt;With our current technology, computers are often faster than humans at doing things in general. Today, we&amp;rsquo;re going to show that with the right timing, this speed becomes pretty useless&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;Of course, we are not actually going to be faster than the computer, but let&amp;rsquo;s dive into &lt;strong&gt;Race Condition attacks&lt;/strong&gt; to better understand what they are and how they work !&lt;/p&gt;</description>
    </item>
    <item>
      <title>ðŸ‡«ðŸ‡· ROPEmporium - ret2csu (x64)</title>
      <link>/posts/2023/03/ropemporium-ret2csu-x64/</link>
      <pubDate>Sun, 12 Mar 2023 00:00:00 +0000</pubDate>
      <guid>/posts/2023/03/ropemporium-ret2csu-x64/</guid>
      <description>&lt;h2 id=&#34;note&#34;&gt;Note&lt;/h2&gt;&#xA;&lt;p&gt;Dernier exercice de ROPEmporium, j&amp;rsquo;ai effectivement sautÃ© &lt;em&gt;fluff&lt;/em&gt; et &lt;em&gt;pivot&lt;/em&gt; puisque je voulais apprendre cette technique car je l&amp;rsquo;ai rencontrÃ©e lors d&amp;rsquo;un CTF. Je reviendrai peut-Ãªtre sur &lt;em&gt;pivot&lt;/em&gt; mais je ne pense pas faire &lt;em&gt;fluff&lt;/em&gt; puisqu&amp;rsquo;il est bien trop &lt;strong&gt;chiant&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Je vais essayer d&amp;rsquo;expliquer au mieux ce que j&amp;rsquo;ai compris du &lt;strong&gt;ret2csu&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Comme d&amp;rsquo;habitude, si j&amp;rsquo;ai fait des erreurs, n&amp;rsquo;hÃ©sitez pas Ã  me contacter sur &lt;a href=&#34;https://discord.com/users/254689803822563348&#34;&gt;discord&lt;/a&gt; pour me le dire.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ðŸ‡¬ðŸ‡§ RushCTF 2023 - pwn/onyo</title>
      <link>/trash/rushctf2023-onyo/</link>
      <pubDate>Sat, 11 Mar 2023 00:00:00 +0000</pubDate>
      <guid>/trash/rushctf2023-onyo/</guid>
      <description>&lt;h2 id=&#34;note&#34;&gt;Note&lt;/h2&gt;&#xA;&lt;p&gt;Writeup for the second &lt;code&gt;pwn&lt;/code&gt; challenge from the RushCTF 2023.&lt;/p&gt;&#xA;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Hello frend!  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Can you read flag.txt?&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://rush.ctf.cafe/api/assets/onyo_38812.zip&#34;&gt;&lt;code&gt;onyo.zip&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;file-information&#34;&gt;File information&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;checksec&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;chall&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;file&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;chall&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[*]&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home/conflict/ctfs/rushctf2023/pwn/onyo/chall&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;Arch&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;amd64-64-little&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;RELRO&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;Partial&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;RELRO&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;Stack&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;No&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;canary&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;found&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;NX&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;NX&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;PIE&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;No&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;PIE&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;0x400000&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;chall&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;ELF&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;64-bit&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;LSB&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;executable&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;x86-64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;SYSV&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;),&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;dynamically&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;linked&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;interpreter&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;lib64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;ld-linux-x86-64&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;so&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;BuildID&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;sha1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]=&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;838c3ab2792a09b81c8259f7b86265675b60d80e&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;GNU&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;Linux&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;3&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;2&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;stripped&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So, we&amp;rsquo;re going to work on a 64 bits non-stripped dynamically linked executable, with &lt;code&gt;NX&lt;/code&gt; enabled.&lt;/p&gt;&#xA;&lt;p&gt;This time, we don&amp;rsquo;t have to source code, so we&amp;rsquo;ll have to use a decompiler if we want to understand what the executable does.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ðŸ‡¬ðŸ‡§ RushCTF 2023 - pwn/poune</title>
      <link>/trash/rushctf2023-poune/</link>
      <pubDate>Sat, 11 Mar 2023 00:00:00 +0000</pubDate>
      <guid>/trash/rushctf2023-poune/</guid>
      <description>&lt;h2 id=&#34;note&#34;&gt;Note&lt;/h2&gt;&#xA;&lt;p&gt;Writeup for the first &lt;code&gt;pwn&lt;/code&gt; challenge from the RushCTF 2023.&lt;/p&gt;&#xA;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Hello kind sir!Â Can you read flag.txt?&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://rush.ctf.cafe/api/assets/poune_29838.zip&#34;&gt;&lt;code&gt;poune.zip&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;file-information&#34;&gt;File information&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;checksec&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;chall&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;file&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;chall&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[*]&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home/conflict/ctfs/rushctf2023/pwn/poune/chall&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;Arch&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;amd64-64-little&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;RELRO&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;Partial&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;RELRO&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;Stack&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;No&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;canary&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;found&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;NX&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;NX&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;PIE&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;No&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;PIE&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;0x400000&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;chall&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;ELF&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;64-bit&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;LSB&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;executable&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;x86-64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;SYSV&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;),&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;dynamically&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;linked&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;interpreter&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;lib64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;ld-linux-x86-64&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;so&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;BuildID&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;sha1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]=&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;6f24ec1597edb178ec5b862b44e5fbcb92df3137&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;GNU&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;Linux&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;3&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;2&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;stripped&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So, we&amp;rsquo;re going to work on a 64 bits non-stripped dynamically linked executable, with &lt;code&gt;NX&lt;/code&gt; enabled.&lt;/p&gt;&#xA;&lt;p&gt;For the source code, there is no need to decompile the file because we have the &lt;code&gt;.c&lt;/code&gt; file.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; var;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;long&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; check &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x04030201&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; buf[&lt;span style=&#34;color:#ae81ff&#34;&gt;0x30&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;puts&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello kind sir!&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;My variable &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;check&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; value is %p.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Could you change it to 0xc0febabe?&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, check);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;This is the current buffer: %s&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, buf);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;fgets&lt;/span&gt;(buf, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x40&lt;/span&gt;, stdin);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (check &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x04030201&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;puts&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mmmh not quite...&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (check &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x04030201&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; check &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0xc0febabe&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;puts&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mmmh getting closer!...&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;This is the new value of &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;check&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: %p&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, check);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (check &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0xc0febabe&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;puts&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Thanks man, you&amp;#39;re a life saver!&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Here is your reward, a shell! &amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;system&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/bin/sh&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;puts&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Bye bye!&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;exploitation&#34;&gt;Exploitation&lt;/h2&gt;&#xA;&lt;p&gt;By looking at the code, we see that our goal is to overwrite the value of a variable located on the stack and we&amp;rsquo;re given its current value.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ðŸ‡¬ðŸ‡§ LACTF 2023 - pwn/rickroll</title>
      <link>/posts/2023/02/lactf-2023-pwn/rickroll/</link>
      <pubDate>Thu, 23 Feb 2023 00:00:00 +0000</pubDate>
      <guid>/posts/2023/02/lactf-2023-pwn/rickroll/</guid>
      <description>&lt;h2 id=&#34;note&#34;&gt;Note&lt;/h2&gt;&#xA;&lt;p&gt;Third &lt;code&gt;pwn&lt;/code&gt; challenge from the &lt;code&gt;LACTF 2023&lt;/code&gt;. It confirmed that I definitely hate format string vulnerabilities.&lt;/p&gt;&#xA;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Make your own custom rickroll with my new rickroll program!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://lactf-challs.storage.googleapis.com/uploads/0e4efb3fd75235a554e2fd64de1cb7d38c4bcec35f80204b78200f5938f68b5b/Dockerfile&#34;&gt;&lt;code&gt;Dockerfile&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://lactf-challs.storage.googleapis.com/uploads/dd85b016a5546daee39f65628a67ec14fe38c3bb50198b5df2a3834f195f0b80/rickroll&#34;&gt;&lt;code&gt;rickroll&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://lactf-challs.storage.googleapis.com/uploads/6b2eef3271c037a7f568ce89a86463b71ade68d68734eacd75f514baa78176dc/rickroll.c&#34;&gt;&lt;code&gt;rickroll.c&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;file-information&#34;&gt;File information&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;checksec&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;rickroll&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;file&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;rickroll&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[*]&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home/conflict/ctfs/lactf2023/rickroll/rickroll&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;Arch&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;amd64-64-little&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;RELRO&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;Partial&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;RELRO&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;Stack&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;No&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;canary&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;found&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;NX&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;NX&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;PIE&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;No&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;PIE&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;0x400000&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;rickroll&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;ELF&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;64-bit&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;LSB&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;executable&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;x86-64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;SYSV&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;),&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;dynamically&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;linked&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;interpreter&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;lib64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;ld-linux-x86-64&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;so&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;BuildID&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;sha1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]=&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;a86d346d66fd7261ce17804cc837d0c5f1a2cfa8&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;GNU&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;Linux&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;3&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;2&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;stripped&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So, we&amp;rsquo;re going to work on a 64 bits non-stripped dynamically linked executable, with &lt;code&gt;NX&lt;/code&gt; enabled, but it&amp;rsquo;s not a problem for us since we&amp;rsquo;re not going to use a shellcode. Also, it is only &lt;em&gt;Partial RELRO&lt;/em&gt; so we will be able to &lt;em&gt;overwrite &lt;code&gt;GOT&lt;/code&gt; entries&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ðŸ‡¬ðŸ‡§ LACTF 2023 - pwn/bot</title>
      <link>/posts/2023/02/lactf-2023-pwn/bot/</link>
      <pubDate>Fri, 17 Feb 2023 00:00:00 +0000</pubDate>
      <guid>/posts/2023/02/lactf-2023-pwn/bot/</guid>
      <description>&lt;h2 id=&#34;note&#34;&gt;Note&lt;/h2&gt;&#xA;&lt;p&gt;Second &lt;code&gt;pwn&lt;/code&gt; challenge from the &lt;code&gt;LACTF 2023&lt;/code&gt;. Basic &lt;code&gt;ret2win&lt;/code&gt; with a little twist: bypassing a condition to prevent the program from exiting&amp;hellip;&lt;/p&gt;&#xA;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;I made a bot to automatically answer all of your questions.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://lactf-challs.storage.googleapis.com/uploads/71a24c7af5b65f1b28fbc60904e82f6a59beac87d2fa349fcd5284105a558cf2/Dockerfile&#34;&gt;&lt;code&gt;Dockerfile&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://lactf-challs.storage.googleapis.com/uploads/263e55f639b540a00fc87e7fdc10078c1cbe89e148ea440ad1a9cef1cbd53c6f/libc-2.31.so&#34;&gt;&lt;code&gt;libc-2.31.so&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://lactf-challs.storage.googleapis.com/uploads/4325e436d7b281490848dfb580f16844adcf31afedf3972e12a660abe5c057c2/ld-2.31.so&#34;&gt;&lt;code&gt;ld-2.31.so&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://lactf-challs.storage.googleapis.com/uploads/cae1f131aabcdf137b27331c5193d8f32d028b05668a57a1df239222e3eeff99/bot.c&#34;&gt;&lt;code&gt;bot.c&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://lactf-challs.storage.googleapis.com/uploads/006a2e73644835158dc097d4eff75ab978a20ffe92c1ce4f534536c41080a7ea/bot&#34;&gt;&lt;code&gt;bot&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;file-information&#34;&gt;File information&lt;/h2&gt;&#xA;&lt;p&gt;&lt;em&gt;before doing all of that, we run &lt;code&gt;pwninit&lt;/code&gt; to patch the binary with the given &lt;code&gt;libc&lt;/code&gt; and &lt;code&gt;ld&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;checksec&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;bot_patched&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;file&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;bot_patched&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[*]&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home/conflict/ctfs/lactf2023/bot/bot_patched&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;Arch&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;amd64-64-little&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;RELRO&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;Partial&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;RELRO&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;Stack&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;No&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;canary&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;found&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;NX&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;NX&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;PIE&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;No&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;PIE&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;0x3ff000&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;RUNPATH&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;bot_patched&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;ELF&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;64-bit&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;LSB&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;executable&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;x86-64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;SYSV&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;),&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;dynamically&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;linked&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;interpreter&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;./&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;ld-2&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;31&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;so&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;GNU&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;Linux&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;3&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;2&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;BuildID&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;sha1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]=&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;1ed799aea3b8082b9dadde68dd67684e6101badc&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;debug_info&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;stripped&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So, we&amp;rsquo;re going to work on a 64 bits non-stripped dynamically linked executable, with &lt;code&gt;NX&lt;/code&gt; enabled, but it&amp;rsquo;s not a problem for us since we&amp;rsquo;re not going to use a shellcode.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ðŸ‡¬ðŸ‡§ LACTF 2023 - pwn/gatekeep</title>
      <link>/trash/lactf2023-gatekeep/</link>
      <pubDate>Wed, 15 Feb 2023 00:00:00 +0000</pubDate>
      <guid>/trash/lactf2023-gatekeep/</guid>
      <description>&lt;h2 id=&#34;note&#34;&gt;Note&lt;/h2&gt;&#xA;&lt;p&gt;First &lt;code&gt;pwn&lt;/code&gt; challenge of this CTF. It&amp;rsquo;s pretty easy because it only consists in overwriting a variable on the stack to make a condition valid and print the flag.&lt;/p&gt;&#xA;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;If I gaslight you enough, you won&amp;#39;t be able to get my flag! :)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Note: The attached binary is the exact same as the one executing on the remote server.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://lactf-challs.storage.googleapis.com/uploads/7013cbe3f634d74f93f7a29bd24010d91068455ac8d9fb16f173d9f14b0bc5fe/Dockerfile&#34;&gt;&lt;code&gt;Dockerfile&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://lactf-challs.storage.googleapis.com/uploads/c87fb83bcc4c5a69bf031715477fa5022ff4e0fbde0f3de64b055ab9c02fe6e9/gatekeep.c&#34;&gt;&lt;code&gt;gatekeep.c&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://lactf-challs.storage.googleapis.com/uploads/552482ce75bc7e3ee7d6c5d951c19a52c00f9711f8c79e89e6547dacafbfa051/gatekeep&#34;&gt;&lt;code&gt;gatekeep&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;file-information&#34;&gt;File information&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;checksec&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;gatekeep&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;file&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;gatekeep&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[*]&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home/conflict/ctfs/lactf2023/gatekeep/gatekeep&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;Arch&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;amd64-64-little&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;RELRO&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;Partial&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;RELRO&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;Stack&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;No&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;canary&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;found&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;NX&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;NX&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;PIE&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;PIE&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;gatekeep&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;ELF&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;64-bit&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;LSB&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;pie&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;executable&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;x86-64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;SYSV&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;),&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;dynamically&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;linked&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;interpreter&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;lib64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;ld-linux-x86-64&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;so&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;BuildID&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;sha1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]=&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;80c46fdc485592ada59a02cc96b63fc03e9c6434&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;GNU&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;Linux&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;3&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;2&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;stripped&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So, we&amp;rsquo;re going to work on a 64 bits non-stripped dynamically linked executable, with &lt;code&gt;PIE&lt;/code&gt; and &lt;code&gt;NX&lt;/code&gt; enabled, but they are irrelevant to achieve our goal.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ðŸ‡«ðŸ‡· ROPEmporium - badchars (x64)</title>
      <link>/posts/2023/01/ropemporium-badchars-x64/</link>
      <pubDate>Wed, 04 Jan 2023 00:00:00 +0000</pubDate>
      <guid>/posts/2023/01/ropemporium-badchars-x64/</guid>
      <description>&lt;h2 id=&#34;note&#34;&gt;Note&lt;/h2&gt;&#xA;&lt;p&gt;CinquiÃ¨ment exo de ROPemporium, je le trouve moins sympa que les autres. Il reprend le principe du challenge prÃ©cÃ©dent, mais il introduit un nouveau gadget pour contourner le &amp;ldquo;filtre&amp;rdquo;: le &lt;code&gt;xor&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Comme d&amp;rsquo;habitude, si j&amp;rsquo;ai fait des erreurs, n&amp;rsquo;hÃ©sitez pas Ã  me contacter sur &lt;a href=&#34;https://discord.com/users/254689803822563348&#34;&gt;discord&lt;/a&gt; pour me le dire.&lt;/p&gt;&#xA;&lt;p&gt;Si vous ne comprenez pas quelque chose, je vous invite Ã  &lt;a href=&#34;/series/ropemporium-x64-series/&#34;&gt;regarder la sÃ©rie dans l&amp;rsquo;ordre&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Et je vous conseille fortement de lire l&amp;rsquo;exercice prÃ©cÃ©dent pour mieux comprendre ce que je fais ici puisque la mÃ©chanique principale est la mÃªme.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ðŸ‡«ðŸ‡· ROPEmporium - write4 (x64)</title>
      <link>/posts/2023/01/ropemporium-write4-x64/</link>
      <pubDate>Tue, 03 Jan 2023 00:00:00 +0000</pubDate>
      <guid>/posts/2023/01/ropemporium-write4-x64/</guid>
      <description>&lt;h1 id=&#34;note&#34;&gt;Note&lt;/h1&gt;&#xA;&lt;p&gt;QuatriÃ¨me exo de ROPEmporium, il introduit une nouvelle mÃ©chanique et nous pousse Ã  utiliser un nouveau type de gadget, trÃ¨s intÃ©ressant&lt;/p&gt;&#xA;&lt;p&gt;Si j&amp;rsquo;ai fait des erreurs, n&amp;rsquo;hÃ©sitez pas Ã  me contacter sur &lt;a href=&#34;https://discord.com/users/254689803822563348&#34;&gt;discord&lt;/a&gt; pour me le dire.&lt;/p&gt;&#xA;&lt;p&gt;Si vous ne comprenez pas quelque chose, je vous invite Ã  &lt;a href=&#34;/series/ropemporium-x64-series/&#34;&gt;regarder la sÃ©rie dans l&amp;rsquo;ordre&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;On completing our usual checks for interesting strings and symbols in this binary we&amp;#39;re confronted with the stark truth that our favourite string &amp;#34;/bin/cat flag.txt&amp;#34; is not present this time. &#xA;Although you&amp;#39;ll see later that there are other ways around this problem, such as resolving dynamically loaded libraries and using the strings present in those, we&amp;#39;ll stick to the challenge goal which is learning how to get data into the target process&amp;#39;s virtual address space via the magic of ROP.&#xA;&#xA;Important!&#xA;A PLT entry for a function named print_file() exists within the challenge binary, simply call it with the name of a file you wish to read (like &amp;#34;flag.txt&amp;#34;) as the 1st argument. &#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;file-information&#34;&gt;File information&lt;/h2&gt;&#xA;&lt;p&gt;Avant de commencer Ã  regarder dans l&amp;rsquo;executable, il faut savoir Ã  quoi on s&amp;rsquo;attaque, on va utiliser &lt;code&gt;file&lt;/code&gt; pour avoir des informations sur le fichier, puis &lt;code&gt;checksec&lt;/code&gt; pour voir les Ã©ventuelles sÃ©curitÃ©es avec lesquelles il a Ã©tÃ© compilÃ©&lt;/p&gt;</description>
    </item>
    <item>
      <title>ðŸ‡«ðŸ‡· ROPEmporium - callme (x64)</title>
      <link>/posts/2023/01/ropemporium-callme-x64/</link>
      <pubDate>Mon, 02 Jan 2023 00:00:00 +0000</pubDate>
      <guid>/posts/2023/01/ropemporium-callme-x64/</guid>
      <description>&lt;h2 id=&#34;note&#34;&gt;Note&lt;/h2&gt;&#xA;&lt;p&gt;TroisiÃ¨me exo de ROPEmporium, un peu plus court que les deux prÃ©cÃ©dents puisqu&amp;rsquo;il reprend des concepts qu&amp;rsquo;on connaÃ®t dÃ©jÃ  donc pas trop de difficultÃ©. Par contre un petit problÃ¨me au niveau de la consigne il me semble.&lt;/p&gt;&#xA;&lt;p&gt;Si j&amp;rsquo;ai fait des erreurs, n&amp;rsquo;hÃ©sitez pas Ã  me contacter sur &lt;a href=&#34;https://discord.com/users/254689803822563348&#34;&gt;discord&lt;/a&gt; pour me le dire.&lt;/p&gt;&#xA;&lt;p&gt;Si vous ne comprenez pas quelque chose, je vous invite Ã  &lt;a href=&#34;/series/ropemporium-x64-series/&#34;&gt;regarder la sÃ©rie dans l&amp;rsquo;ordre&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;file-information&#34;&gt;File information&lt;/h2&gt;&#xA;&lt;p&gt;Avant de commencer Ã  regarder dans l&amp;rsquo;executable, il faut savoir Ã  quoi on s&amp;rsquo;attaque, on va utiliser &lt;code&gt;file&lt;/code&gt; pour avoir des informations sur le fichier, puis &lt;code&gt;checksec&lt;/code&gt; pour voir les Ã©ventuelles sÃ©curitÃ©es avec lesquelles il a Ã©tÃ© compilÃ©&lt;/p&gt;</description>
    </item>
    <item>
      <title>ðŸ‡«ðŸ‡· ROPEmporium - split (x64)</title>
      <link>/posts/2023/01/ropemporium-split-x64/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>/posts/2023/01/ropemporium-split-x64/</guid>
      <description>&lt;h2 id=&#34;note&#34;&gt;Note&lt;/h2&gt;&#xA;&lt;p&gt;DeuxiÃ¨me exercice de ROPEmporium, un tout petit peu plus complexe que le prÃ©cÃ©dent mais il reste trÃ¨s accessible. Je vais essayer une fois de plus d&amp;rsquo;expliquer le plus clairement possible ce que j&amp;rsquo;ai fait pour le rÃ©ussir. Si j&amp;rsquo;ai fait des erreurs, n&amp;rsquo;hÃ©sitez pas Ã  me contacter sur &lt;a href=&#34;https://discord.com/users/254689803822563348&#34;&gt;discord&lt;/a&gt; pour me le dire.&lt;/p&gt;&#xA;&lt;p&gt;Si vous ne comprenez pas quelque chose, je vous invite Ã  &lt;a href=&#34;/series/ropemporium-x64-series/&#34;&gt;regarder la sÃ©rie dans l&amp;rsquo;ordre&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;file-information&#34;&gt;File information&lt;/h2&gt;&#xA;&lt;p&gt;Avant de commencer Ã  regarder dans l&amp;rsquo;executable, il faut savoir Ã  quoi on s&amp;rsquo;attaque, on va utiliser &lt;code&gt;file&lt;/code&gt; pour avoir des informations sur le fichier, puis &lt;code&gt;checksec&lt;/code&gt; pour voir les Ã©ventuelles sÃ©curitÃ©es avec lesquelles il a Ã©tÃ© compilÃ©&lt;/p&gt;</description>
    </item>
    <item>
      <title>ðŸ‡«ðŸ‡· ROPEmporium - ret2win (x64)</title>
      <link>/posts/2022/12/ropemporium-ret2win-x64/</link>
      <pubDate>Sat, 31 Dec 2022 00:00:00 +0000</pubDate>
      <guid>/posts/2022/12/ropemporium-ret2win-x64/</guid>
      <description>&lt;h2 id=&#34;note&#34;&gt;Note&lt;/h2&gt;&#xA;&lt;p&gt;Je suis actuellement entrain d&amp;rsquo;apprendre le pwn donc il est possible que je fasse des erreurs ou que je dise des choses fausses dans ce post, si vous en voyez n&amp;rsquo;hÃ©sitez pas Ã  me contacter sur &lt;a href=&#34;https://discord.com/users/254689803822563348&#34;&gt;discord&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;file-information&#34;&gt;File information&lt;/h2&gt;&#xA;&lt;p&gt;Avant de commencer Ã  regarder dans l&amp;rsquo;executable, il faut savoir Ã  quoi on s&amp;rsquo;attaque, on va utiliser &lt;code&gt;file&lt;/code&gt; pour avoir des informations sur le fichier, puis &lt;code&gt;checksec&lt;/code&gt; pour voir les Ã©ventuelles sÃ©curitÃ©es avec lesquelles il a Ã©tÃ© compilÃ©&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
